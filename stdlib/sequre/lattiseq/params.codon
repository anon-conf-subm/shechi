from sequre.constants import LATTISEQ_CONJUGATE_INVARIANT_RING_ENUM


# ParametersLiteral is a literal representation of BFV parameters.  It has public
# fields and is used to express unchecked user-defined parameters literally into
# Go programs. The NewParametersFromLiteral function is used to generate the actual
# checked parameters from the literal representation.
#
# Users must set the polynomial degree (logn) and the coefficient modulus, by either setting
# the q and p fields to the desired moduli chain, or by setting the logq and logp fields to
# the desired moduli sizes.
#
# Optionally, users may specify
# - the base 2 decomposition for the gadget ciphertexts
# - the error variance (sigma) and secrets' density (h) and the ring
# type (ring_type). If left unset, standard default values for these field are substituted at
# parameter creation (see NewParametersFromLiteral).
class RLWEParametersLiteral:
    logn: int
    q: list[u64]
    p: list[u64]
    logq: list[int]
    logp: list[int]
    pow2_base: int
    sigma: float
    h: int
    ring_type: int

    def __init__(self, logn, q, p, logq, logp, pow2_base, sigma, h, ring_type):
        self.logn = logn
        self.q = q
        self.p = p
        self.logq = logq
        self.logp = logp
        self.pow2_base = pow2_base
        self.sigma = sigma
        self.h = h
        self.ring_type = ring_type


class CKKSParametersLiteral:
    logn: int
    q: list[u64]
    p: list[u64]
    logq: list[int]
    logp: list[int]
    pow2_base: int
    sigma: float
    h: int
    ring_type: int
    log_slots: int
    default_scale: float

    def __init__(self: CKKSParametersLiteral, logn: int, log_slots: int, default_scale: float):
        self.logn = logn
        self.log_slots = log_slots
        self.default_scale = default_scale
        self.q = list[u64]()
        self.p = list[u64]()
        self.logq = list[int]()
        self.logp = list[int]()

    def __init__(self: CKKSParametersLiteral, logn: int, logq: list[int], logp: list[int], log_slots: int, default_scale: float):
        self.__init__(logn, log_slots, default_scale)
        self.logq = logq
        self.logp = logp
    
    def __init__(self, logn: int, q: list[u64], p: list[u64], log_slots: int, default_scale: float):
        self.__init__(logn, log_slots, default_scale)
        self.q = q
        self.p = p
    
    def __init__(self, logn: int, q: list[u64], p: list[u64], ring_type: int, log_slots: int, default_scale: float):
        self.__init__(logn, q, p, log_slots, default_scale)
        self.ring_type = ring_type

    def rlwe_parameters(self):
        return RLWEParametersLiteral(
            logn=self.logn,
            q=self.q,
            p=self.p,
            logq=self.logq,
            logp=self.logp,
            pow2_base=self.pow2_base,
            sigma=self.sigma,
            h=self.h,
            ring_type=self.ring_type)


# PN12QP109 is a default parameter set for logN=12 and logQP=109
PN12QP109 = CKKSParametersLiteral(
    logn=12,
    q=[  # 37 + 32
        u64(0x200000e001),
        u64(0x100006001)],
    p=[  # 38
        u64(0x3ffffea001)],
    log_slots=11,
    default_scale=float(1 << 32))


# PN13QP218 is a default parameter set for logN=13 and logQP=218
PN13QP218 = CKKSParametersLiteral(
    logn=13,
    q=[  # 33 + 5 x 30
        u64(0x1fffec001),
        u64(0x3fff4001),
        u64(0x3ffe8001),
        u64(0x40020001),
        u64(0x40038001),
        u64(0x3ffc0001)],
    p=[  # 35
        u64(0x800004001)],
    log_slots=12,
    default_scale=float(1 << 30))


# PN14QP438 is a default parameter set for logN=14 and logQP=438
PN14QP438 = CKKSParametersLiteral(
    logn=14,
    q=[  # 45 + 9 x 34
        u64(0x200000008001), u64(0x400018001),
        u64(0x3fffd0001), u64(0x400060001),
        u64(0x400068001), u64(0x3fff90001),
        u64(0x400080001), u64(0x4000a8001),
        u64(0x400108001), u64(0x3ffeb8001)],
    p=[u64(0x7fffffd8001), u64(0x7fffffc8001)],  # 43, 43
    log_slots=13,
    default_scale=float(1 << 34))


# Schemes parameters are created from scratch
PN14QP425 = CKKSParametersLiteral(
    logn=14,
    logq=[55, 40, 40, 40, 40, 40, 40, 40],
    logp=[45, 45],
    log_slots=13,
    default_scale=float(1 << 40))


# PN15QP880 is a default parameter set for logN=15 and logQP=880
PN15QP880 = CKKSParametersLiteral(
    logn=15,
    q=[  # 50 + 17 x 40
        u64(0x4000000120001), u64(0x10000140001), u64(0xffffe80001),
        u64(0x10000290001), u64(0xffffc40001), u64(0x100003e0001),
        u64(0x10000470001), u64(0x100004b0001), u64(0xffffb20001),
        u64(0x10000500001), u64(0x10000650001), u64(0xffff940001),
        u64(0xffff8a0001), u64(0xffff820001), u64(0xffff780001),
        u64(0x10000890001), u64(0xffff750001), u64(0x10000960001)],
    p=[u64(0x40000001b0001), u64(0x3ffffffdf0001), u64(0x4000000270001)],  # 50, 50, 50
    log_slots=14,
    default_scale=float(1 << 40))


# PN16QP1761 is a default parameter set for logN=16 and logQP = 1761
PN16QP1761 = CKKSParametersLiteral(
    logn=16,
    q=[  # 55 + 33 x 45
        u64(0x80000000080001), u64(0x2000000a0001), u64(0x2000000e0001), u64(0x1fffffc20001),
        u64(0x200000440001), u64(0x200000500001), u64(0x200000620001), u64(0x1fffff980001),
        u64(0x2000006a0001), u64(0x1fffff7e0001), u64(0x200000860001), u64(0x200000a60001),
        u64(0x200000aa0001), u64(0x200000b20001), u64(0x200000c80001), u64(0x1fffff360001),
        u64(0x200000e20001), u64(0x1fffff060001), u64(0x200000fe0001), u64(0x1ffffede0001),
        u64(0x1ffffeca0001), u64(0x1ffffeb40001), u64(0x200001520001), u64(0x1ffffe760001),
        u64(0x2000019a0001), u64(0x1ffffe640001), u64(0x200001a00001), u64(0x1ffffe520001),
        u64(0x200001e80001), u64(0x1ffffe0c0001), u64(0x1ffffdee0001), u64(0x200002480001),
        u64(0x1ffffdb60001), u64(0x200002560001)],
    p=[u64(0x80000000440001), u64(0x7fffffffba0001), u64(0x80000000500001), u64(0x7fffffffaa0001)],  # 4 x 55
    log_slots=15,
    default_scale=float(1 << 45))


# PN12QP109CI is a default parameter set for logN=12 and logQP=109
PN12QP109CI = CKKSParametersLiteral(
    logn=12,
    q=[u64(0x1ffffe0001), u64(0x100014001)],  # 37 + 32
    p=[u64(0x4000038001)],  # 38
    ring_type=LATTISEQ_CONJUGATE_INVARIANT_RING_ENUM,
    log_slots=12,
    default_scale=float(1 << 32))


# PN13QP218CI is a default parameter set for logN=13 and logQP=218
PN13QP218CI = CKKSParametersLiteral(
    logn=13,
    q=[  # 33 + 5 x 30
        u64(0x200038001),
        u64(0x3ffe8001),
        u64(0x40020001),
        u64(0x40038001),
        u64(0x3ffc0001),
        u64(0x40080001)],
    p=[u64(0x800008001)],  # 35
    ring_type=LATTISEQ_CONJUGATE_INVARIANT_RING_ENUM,
    log_slots=13,
    default_scale=float(1 << 30))


# PN14QP438CI is a default parameter set for logN=14 and logQP=438
PN14QP438CI = CKKSParametersLiteral(
    logn=14,
    q=[  # 45 + 9*34
        u64(0x2000000a0001), u64(0x3fffd0001),
        u64(0x400060001), u64(0x3fff90001),
        u64(0x400080001), u64(0x400180001),
        u64(0x3ffd20001), u64(0x400300001),
        u64(0x400360001), u64(0x4003e0001)],
    p=[u64(0x80000050001), u64(0x7ffffdb0001)],  # 43, 43
    ring_type=LATTISEQ_CONJUGATE_INVARIANT_RING_ENUM,
    log_slots=14,
    default_scale=float(1 << 34))


DEFAULT_PARAMS = PN14QP438
DEFAULT_SLOTS = 1 << DEFAULT_PARAMS.log_slots
