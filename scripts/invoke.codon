import time

from sequre.runtime import client, fork_parties
from sequre.constants import (
    RUN_TOGGLES, NUMBER_OF_PARTIES,
    MPC_RING_SIZE, MPC_FIELD_SIZE)

from ..tests.benchmark import benchmark


def invoke(protocol_func, pid, control_toggles, local, modulus):
    if local:
        fork_parties(0, NUMBER_OF_PARTIES - 1, protocol_func, control_toggles, modulus, control_toggles, modulus)
    else:
        s = time.time()
        client(pid, protocol_func, control_toggles, local, modulus, control_toggles, modulus)
        e = time.time()
        print(f'Total client runtime: {e - s}s')


import sys
command = sys.argv[1:]
flags = [arg for arg in command if arg.startswith('--')]
args = [arg for arg in command if arg not in flags]

toggles = {toggle: toggle in flags for toggle in RUN_TOGGLES}
local = toggles[RUN_TOGGLES.LOCAL_SETUP_FLAG]
modulus = MPC_RING_SIZE if toggles[RUN_TOGGLES.USE_RING_FLAG] else MPC_FIELD_SIZE

if toggles[RUN_TOGGLES.USE_RING_FLAG]:
    raise ValueError("Running Sequre on ring is temporarily disabled until modulus switching bug is fixed.")

assert local or len(args) >= 2, f"Non-local run: No CP ID provided.\n\tMake sure to add CP ID to your command {' '.join(command)} <cpid>"
pid = 0 if local else int(args[1])

supported_calls = ['run-benchmarks']
match args[0]:
    case supported_calls[0]: invoke(benchmark, pid, toggles, local, modulus)
    case _: raise NotImplementedError(f'Invalid client call: {args[0]}. Should be in {supported_calls}')
